{"ast":null,"code":"var _jsxFileName = \"/Users/ibaylis/Desktop/react-project/react-github-finder/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      loading: false,\n      alert: null // Search Github users\n\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"https://api.github.com/users?q=\".concat(text, \"&client_id=\\n        \").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\\n        \").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"\\n            ?client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"\\n            &client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=5&sort=created:asc\\n        &client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"\\n        &client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n      this.setState({\n        repos: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => this.setState({\n      users: [],\n      loading: false\n    });\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          users = _this$state.users,\n          user = _this$state.user,\n          loading = _this$state.loading;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      title: \"Github Finder\",\n      icon: \"fab fa-github\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      alert: this.state.alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, null, React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Users, {\n        loading: loading,\n        users: users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user/:login\",\n      render: props => React.createElement(User, Object.assign({}, props, {\n        getUser: this.getUser,\n        user: user,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App; // componentDidMount() {\n//     axios.get('https://api.github.com/users')\n//          .then(res => console.log(res.data))\n// }\n// Notes\n//                       componentDidMount() {} -> async componentDidMount() {}\n// axios.get('https://api.github.com/users') -> const res = await axios.get('https://api.github.com/users');\n//       .then(res => console.log(res.data)) -> console.log(res.data);\n// async componentDidMount() {\n//     this.setState({ loading: true })\n//     const res = await axios.get(`https://api.github.com/users?client_id=\n//     ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n//     ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n//     this.setState({ users: res.data, loading: false });\n//     console.log(res.data);\n// }","map":{"version":3,"sources":["/Users/ibaylis/Desktop/react-project/react-github-finder/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","App","state","users","user","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","repos","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        users: [],\n        user: {},\n        loading: false,\n        alert: null\n    }\n\n\n    // Search Github users\n    searchUsers = async text => {\n        this.setState({ loading: true });\n        const res = await axios.get(`https://api.github.com/users?q=${text}&client_id=\n        ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n        ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n        this.setState({ users: res.data.items, loading: false });\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n    // Get single Github user\n    getUser = async (username) => {\n        this.setState({ loading: true });\n\n        const res = await axios.get(\n            `https://api.github.com/users/${username}\n            ?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\n            &client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n        this.setState({ user: res.data, loading: false });\n    }\n\n\n\n\n\n// Get users repos\ngetUserRepos = async (username) => {\n    this.setState({ loading: true });\n\n    const res = await axios.get(\n        `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc\n        &client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\n        &client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n    this.setState({ repos: res.data, loading: false });\n}\n\n\n\n\n\n    // Clear users from state\n    clearUsers = () => this.setState({ users: [], loading: false })\n\n    // Set Alert\n    setAlert = (msg, type) => {\n        this.setState({ alert: { msg, type } });\n        setTimeout(() => this.setState({ alert: null }), 5000);\n    };\n\n    render() {\n        const { users, user, loading } = this.state;\n\n        return (\n            <Router>\n                <div className='App'>\n                    <Navbar \n                        title='Github Finder' \n                        icon='fab fa-github'\n                    />\n                    <div className='container'>\n                        <Alert alert={this.state.alert} />\n                        <Switch>\n                            <Route \n                                exact path='/'\n                                render={props => (\n                                    <>\n                                        <Search \n                                            searchUsers={this.searchUsers} \n                                            clearUsers={this.clearUsers} \n                                            showClear={users.length > 0 ? true : false }\n                                            setAlert={this.setAlert}\n                                            />\n                                        <Users loading={loading} users={users} />    \n                                    </>\n                                )} \n                                />\n                                <Route exact path='/about' component={About} />\n                                <Route exact path='/user/:login' render={props => (\n                                    <User { ...props } getUser={this.getUser} user={user} loading={loading} />\n                                )} />\n                        </Switch>\n                        \n                    </div>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n\n    // componentDidMount() {\n    //     axios.get('https://api.github.com/users')\n    //          .then(res => console.log(res.data))\n    // }\n\n// Notes\n//                       componentDidMount() {} -> async componentDidMount() {}\n// axios.get('https://api.github.com/users') -> const res = await axios.get('https://api.github.com/users');\n//       .then(res => console.log(res.data)) -> console.log(res.data);\n\n    // async componentDidMount() {\n    //     this.setState({ loading: true })\n\n    //     const res = await axios.get(`https://api.github.com/users?client_id=\n    //     ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n    //     ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n    //     this.setState({ users: res.data, loading: false });\n    //     console.log(res.data);\n    // }"]},"metadata":{},"sourceType":"module"}